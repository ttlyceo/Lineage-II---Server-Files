# ---------------------------------------------------------------------------
# GeoData（地理資料設定）
# ---------------------------------------------------------------------------

# 尋路功能設定：
# 0 = 停用尋路功能
# 1 = 啟用使用路徑節點檔案（path node）
# 2 = 啟用即時地理資料單元格尋路
# 預設值：0（停用）
PathFinding = 2

# 路徑節點檔案所在目錄
# 預設值：data/pathnode
PathnodeDirectory = data/pathnode

# 尋路時記憶體緩衝區的設定（用於優化效能）
PathFindBuffers = 100x6;128x6;192x6;256x4;320x4;384x4;500x2

# 無障礙物且遠離牆壁節點的權重（移動偏好）
LowWeight = 0.5

# 靠近牆壁節點的權重（稍微迴避靠牆節點）
MediumWeight = 2

# 存在障礙物節點的權重（盡量避免障礙節點）
HighWeight = 3

# 開啟更智慧的對角路徑尋路策略，但會增加 CPU 負擔
AdvancedDiagonalStrategy = True

# 對角線移動的權重值。僅當 AdvancedDiagonalStrategy 啟用時有效。
# 預設值：LowWeight * sqrt(2) ? 0.707
DiagonalWeight = 0.707

# 最大 LOS（視線）後處理過濾次數，設定為 0 則停用後處理。
# 預設值：3
MaxPostfilterPasses = 3

# 尋路除錯功能（僅供開發測試使用，絕不可用於正式伺服器！）：
# 將節點顯示為金幣（Adena），建構的路徑顯示為解毒藥劑（Antidote）
# 物品數量表示節點成本×10
# 藥水顯示第一階段篩選後的路徑節點
# 紅色藥水表示實際使用的路徑點，綠色藥水表示被 LOS 後處理移除的節點
DebugPath = False

# True = 將地理資料緩衝區內容強制載入記憶體，以提高效能
# False = 不強制載入，系統可能會根據需求決定是否載入至記憶體
# 預設值：True
ForceGeoData = True

# 是否允許角色因高處掉落而受到傷害
# 建議搭配 CoordSynchronize = 2 使用
# 預設值：True（啟用掉落傷害）
EnableFallingDamage = False

# 客戶端與伺服器之間玩家座標同步設定：
# -1 = 僅同步客戶端 → 伺服器的 Z 座標。無地理資料時的預設值。
# 1 = 僅客戶端 → 伺服器單向同步，無地理資料時可避免玩家穿越障礙物。
# 2 = 適用於有地理資料的伺服器（尤其是使用即時尋路時），無地理資料則建議 -1。
#     若客戶端座標與伺服器計算座標差異過大，伺服器將傳送校正封包。
# 預設值：-1
CoordSynchronize = 2

# 地理資料檔案路徑設定
geodataPath = ./data/geodata

# 是否嘗試載入下方未明確指定的區域（若檔案不存在，也不影響伺服器啟動）：
# True = 嘗試載入所有區域（包含未指定區域）
# False = 只載入下方明確指定為 True 的區域
tryLoadUnspecifiedRegions = True

# 下方為明確指定要載入或排除載入的地理資料區域列表：
# 範例：
# 必須載入以下兩個區域：
# 22_22=True
# 19_20=true
# 排除特定區域的載入：
# 25_26=false
# True 代表該區域必須載入成功才允許伺服器啟動
# False 則表示不載入該區域且不影響伺服器啟動